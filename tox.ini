# Tox (http://tox.testrun.org/) is a tool for running tests in
# multiple virtualenvs. To use it, "pip install tox" and then run
# "tox" from this directory.

[tox]
envlist =py{34, 35, 36, 37, pypy}, lint, cov, docs
skip_missing_interpreters = True

# Tox doesn't like that we specify py3==py37
ignore_basepython_conflict=True

[testenv]
# Most of these are defaults, but if you specify any you can't fall back
# defaults for the others.
description = run test suite under {basepython}
setenv =
    PIP_DISABLE_VERSION_CHECK = 1
    VIRTUALENV_DOWNLOAD=0
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
    PYTHONDONTWRITEBYTECODE=1
passenv = TOXENV CI TRAVIS TRAVIS_*
usedevelop = True
install_command = pip install -U {opts} {packages}
deps =
     -r{toxinidir}/requirements.txt
     -r{toxinidir}/requirements_test.txt
commands =
    pytest \
    --cov "{envsitepackagesdir}/tox_conda" \
    --cov-config "{toxinidir}/tox.ini" \
    --timeout 180 \
    --junitxml {env:JUNIT_XML_FILE:{toxworkdir}/.test.{envname}.xml} \
    {posargs:tests}

[testenv:dev]
description = dev environment with all deps at {envdir}
usedevelop = True
commands = python -m pip list --format=columns
           python -c "print(r'{envpython}')"

[testenv:lint]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
basepython = python3.7
passenv = HOMEPATH
          # without PROGRAMDATA cloning using git for Windows will fail with an
          # `error setting certificate verify locations` error
          PROGRAMDATA
extras = lint
deps =
     -r{toxinidir}/requirements.txt
     -r{toxinidir}/requirements_test.txt
skip_install = True
commands = pre-commit run --all-files --show-diff-on-failure
           python -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'

[flake8]
max-line-length = 99
ignore = E203

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
line_length = 99
known_first_party = tox,tests
known_third_party = pluggy,py,setuptools

[testenv:cov]
escription = [run locally after tests]: combine coverage data and create report;
              generates a diff coverage against origin/master (can be changed by setting DIFF_AGAINST env var)
deps =
     -r{toxinidir}/requirements.txt
     -r{toxinidir}/requirements_test.txt
skip_install: true
passenv = DIFF_AGAINST
setenv = COVERAGE_FILE={toxworkdir}/.coverage
commands =  coverage combine
            coverage report -m
            coverage xml -o {toxworkdir}/coverage.xml
            coverage html -d {toxworkdir}/htmlcov
            diff-cover --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/coverage.xml
depends = py34, py35, py26, py37, pypy
parallel_show_output = True

[coverage:run]
branch = true
parallel = true

[coverage:report]
skip_covered = True
show_missing = True
exclude_lines =
    \#\s*pragma: no cover
    ^\s*raise AssertionError\b
    ^\s*raise NotImplementedError\b
    ^\s*return NotImplemented\b
    ^\s*raise$
    ^if __name__ == ['"]__main__['"]:$
[coverage:paths]
source = src/tox_conda
         .tox/*/lib/python*/site-packages/tox_conda
         .tox/pypy*/site-packages/tox_conda
         .tox\*\Lib\site-packages\tox_conda
         */src/tox_conda
         *\src\tox_conda

[testenv:docs]
basepython=python3.7
changedir = docs/source
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements_test.txt
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build -b html -d {envtmpdir}/doctrees . {envtmpdir}/html
