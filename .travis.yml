---
language: python
dist: xenial

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# Turn off email notifications
notifications:
  email: false

env:
  global:
    # used by ci-helpers
    - DEPS="pytest pytest-qt tox coveralls six"
    - MINICONDA_VERSION=latest
    - DISPLAY=":99.0"

matrix:
  include:
    - name: "Python 3.7.1 on Xenial Linux"
      python: 3.7 # this works for Linux but is ignored on macOS or Windows
    - name: "Python 3.7.4 on macOS"
      os: osx
      osx_image: xcode11 # Python 3.7.4 running on macOS 10.14.4
      language: shell # 'language: python' is an error on Travis CI macOS
      before_install:
        - brew install miniconda
    - name: "Python 3.7.4 on Windows"
      os: windows # Windows 10.0.17134 N/A Build 17134
      language: shell # 'language: python' is an error on Travis CI Windows
      before_install:
        - choco install python
        - python -m pip install --upgrade pip
        - choco install miniconda
      env: PATH=/c/Python37:/c/Python37/Scripts:$PATH

cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/download

services:
  - xvfb

before_install:
  - wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r

  - conda config --set always_yes yes --set changeps1 no
  - conda config --add channels conda-forge
  - conda update -q conda --yes
  - conda info -a # for debug reasons

  # to aid in debugging
  - echo ${TRAVIS_BRANCH}
  - echo ${TRAVIS_REPO_SLUG}
  - echo ${GIT_TARGET_EXTRA}
  - echo ${GIT_SOURCE_EXTRA}

install:
  - export GIT_FULL_HASH=`git rev-parse HEAD`
  - pip3 install --upgrade pip # all three OSes agree about 'pip3'
  # 'python' points to Python 2.7 on macOS but points to Python 3.7 on Linux and Windows
  # 'python3' is a 'command not found' error on Windows but 'py' works on Windows only
  - conda env create -f environment.yml -p conda-env python=${PYTHON_VERSION}
  - conda list # for debug reasons

before_script:
  # We need to create a (fake) display on Travis, let's use a funny resolution
  - export DISPLAY=:99.0
  - /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1400x900x24 -ac +extension GLX +render

  # Make sure everyone uses the correct python (this is handled by conda)
  - which python
  - python --version
  - pwd
  - ls
  # Help color output from each test
  - RESET='\033[0m';
    RED='\033[00;31m';
    GREEN='\033[00;32m';
    YELLOW='\033[00;33m';
    BLUE='\033[00;34m';
    PURPLE='\033[00;35m';
    CYAN='\033[00;36m';
    WHITE='\033[00;37m';
    start_test() {
    echo -e "${BLUE}======== Starting $1 ========${RESET}";
    };
    check_output() {
    ret=$?;
    if [ $ret == 0 ]; then
    echo -e "${GREEN}>>>>>>    $1 passed    <<<<<<${RESET}";
    else
    echo -e "${RED}>>>>>>    $1 FAILED    <<<<<<${RESET}";
    fi;
    return $ret;
    };

  - if [ "${TEST}" == "extra" ]; then
    start_test "repo size check";
    mkdir ~/repo-clone && cd ~/repo-clone &&
    git init && git remote add -t ${TRAVIS_BRANCH} origin git://github.com/${TRAVIS_REPO_SLUG}.git &&
    git fetch origin ${GIT_TARGET_EXTRA} &&
    git checkout -qf FETCH_HEAD &&
    git tag travis-merge-target &&
    git gc --aggressive &&
    TARGET_SIZE=`du -s . | sed -e "s/\t.*//"` &&
    git pull origin ${GIT_SOURCE_EXTRA} &&
    git gc --aggressive &&
    MERGE_SIZE=`du -s . | sed -e "s/\t.*//"` &&
    if [ "${MERGE_SIZE}" != "${TARGET_SIZE}" ]; then
    SIZE_DIFF=`expr \( ${MERGE_SIZE} - ${TARGET_SIZE} \)`;
    else
    SIZE_DIFF=0;
    fi;
    fi;

script:
  - source conda-env/bin/activate
  - tox -e ${PYTHON}
  - tox -e docs

after_success:
  - codecov
  - coveralls
  - conda build conda.recipe --no-test
  - conda install --use-local jmopenorders
  - conda info -a

before_deploy:
  # Conda deploy if on tag
  # ANACONDA_TOKEN should be provided by Travis
  # How to generate ANACONDA_TOKEN: https://docs.anaconda.com/anaconda-cloud/user-guide/tasks/work-with-accounts#creating-access-tokens

  # https://conda.io/docs/user-guide/tasks/build-packages/install-conda-build.html
  - conda config --set anaconda_upload no
  - travis_wait 60 conda build --quiet --no-test --output-folder conda_build conda.recipe

  # Convert to other platforms: OSX, WIN
  - conda convert --platform win-64 conda_build/linux-64/*.tar.bz2 -o conda_build/
  - conda convert --platform osx-64 conda_build/linux-64/*.tar.bz2 -o conda_build/
  # Upload to Anaconda
  # We could use --all but too much platforms to uploaded
  - ls conda_build/*/*.tar.bz2 | xargs -I {} anaconda -v -t $ANACONDA_TOKEN upload -u jmuelbert {}

deploy:
  provider: pypi
  skip_upload_docs: true
  user: jmuelbert
  password:
    secure: "blWLOCNJ/UuEK2tg4dpgd2pkRvIXlvJmFSv7vF06k+BSacTtRVn5L+syXkcJDjB8eOm1FLBAwlcqt2W6/KACrV0NnfyNj8kuBaIUVrJhWJ+7osoMGJR2tH/TqIFxYFgRs0ZcolfhCVWX0ApRt127526vhUR5m+BLlCRfMlGT4fRgK3Wd7x4YNabjk+t2AHAzDu2v43r95ozxFQALTZHwRg06DrVxuE1eU6QRA6k1mx68DVDmKjjjDVCMCHeTuiqXJ8yPF4btO9mo88B6lMlUQ/grIbY9XTCncscgrZyvuiToERbOeTsQllvVSbl1E2HXcDRBIQR/+M/gy0583Fwf33+cIrITaEtKhe5XU8jykAnW05kcTN81TEKPCxuJYRfkzyZ6+1TDtixniI9/sofwED8cN85yql8xhO44GPPeMfSBLHNAzScd73KhSMz2xDXfWxF9oBjtt3KoEM/v7CVHc+wSuxR/hT/++w2tJgxxxsnX8ntC8zkA7JgAMZn2rgRefYXeR24EQmmWiWJBABlfijYM7SqBEYrEVrV8TOQpfJ09X2CbqNlTMOlqzZBSNHGrMRR4+UsRgAvoYlUXifwRCYr/qY3XJqW8baGRogRYL6ASSTXO/DTC/QVpWqWg57Ey6gejG+NRhCeJsJCm0dzDGTuc3qw/kEHWimY+bX2Xgh0="
  distributions: sdist bdist_wheel
  on:
    tags: true
    repo: jmuelbert/jmopenorders
