default_language_version:
  python: python3
exclude: "src/jmopenorders/_vendor/"

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.1.0
    hooks:
      - id: check-yaml
        args: ["--allow-multiple-documents"]
        exclude: recipe/meta.yaml
      - id: check-added-large-files
        args: ["--maxkb=150"]
      - id: check-ast
      - id: check-builtin-literals
      - id: check-byte-order-marker
        exclude: ^.*(\.cbproj|\.groupproj|\.props|\.sln|\.vcxproj|\.vcxproj.filters)$
      - id: check-case-conflict
      - id: detect-private-key
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-toml
      - id: check-json
      - id: pretty-format-json
        args: ["--autofix"]
        exclude: .vscode/*
      - id: check-xml
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-vcs-permalinks
      - id: debug-statements
      - id: end-of-file-fixer
        stages:
          - commit
          - manual
      - id: name-tests-test
      - id: file-contents-sorter
      - id: fix-encoding-pragma
      - id: forbid-new-submodules
      - id: mixed-line-ending
      - id: sort-simple-yaml
      - id: requirements-txt-fixer
      - id: trailing-whitespace
        exclude: .patch
        args: [--markdown-linebreak-ext=md]
        stages:
          - commit
          - manual
      - id: no-commit-to-branch
        args: [--branch, develop]

  - repo: https://github.com/psf/black
    rev: 19.10b0
    hooks:
      - id: black
        args: ["--line-length", "80"]

  - repo: https://gitlab.com/PyCQA/flake8
    rev: 3.8.2
    hooks:
      - id: flake8
        additional_dependencies:
          - pep8-naming
          - flake8-typing-imports
          - flake8-bugbear
          - flake8-implicit-str-concat
          - flake8-docstrings
          - pydocstyle
        # Ignore all format-related checks as Black takes care of those.
        args:
          [
            "--max-line-length",
            "80",
            "--ignore",
            "E2,W5",
            "--select",
            "E,W,F,N",
          ]

  - repo: https://github.com/pre-commit/mirrors-autopep8
    rev: v1.5.2
    hooks:
      - id: autopep8

  - repo: https://github.com/pre-commit/pre-commit
    rev: v2.4.0
    hooks:
      - id: validate_manifest

  - repo: https://github.com/asottile/pyupgrade
    rev: v2.4.4
    hooks:
      - id: pyupgrade
        args: ["--py3-plus"]

  - repo: https://github.com/asottile/reorder_python_imports
    rev: v2.3.0
    hooks:
      - id: reorder-python-imports
        name: Reorder Python imports (src, tests)
        files: "^(?!examples/)"
        args: ["--application-directories", "src"]
        language_version: python3

  - repo: https://github.com/asottile/setup-cfg-fmt
    rev: v1.9.0
    hooks:
      - id: setup-cfg-fmt

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v0.770
    hooks:
      - id: mypy
        exclude: docs|tests|jmopenorders|setup.py
        args: []
        language_version: python3

  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.5.1
    hooks:
      - id: python-check-blanket-noqa
      - id: python-check-mock-methods
      - id: python-no-log-warn
      - id: python-no-eval
      - id: python-use-type-annotations
      - id: rst-backticks
        # Validate existing ReST files an NEWS fragments.
        files: .*\rst|^news/.*
        types: [file]
        # The errors flagged in NEWS.rst are old
        exclude: NEWS.rst

  - repo: https://github.com/mgedmin/check-manifest
    rev: "0.42"
    hooks:
      - id: check-manifest

  - repo: https://github.com/jumanjihouse/pre-commit-hooks
    rev: 2.1.0
    hooks:
      - id: bundler-audit
      - id: check-mailmap
      - id: fasterer
      - id: forbid-binary
        exclude: >
          (?x)^(
            .+\.png|
            .+\.woff|
            .+\.woff2|
            .+\.tff|
            .+\.ico|
            .+\.icns|
            .+\.svgz|
          )$
      #- id: forbid-space-in-indent
      - id: git-check # Configure in .gitattributes
      - id: git-dirty # Configure in .gitignore
      - id: markdownlint # Configure in .mdlrc
      - id: reek
      - id: rubocop
      - id: script-must-have-extension
        name: Local policy is exclude extension from all shell files
        types: [shell, non-executable]
      - id: script-must-not-have-extension
        name: Execute Ruby scripts must not have a file extension
        types: [shell, non-executable]
      - id: shellcheck
      - id: shfmt

  - repo: https://github.com/Lucas-C/pre-commit-hooks-go
    rev: v1.0.1
    hooks:
      - id: checkmake

  - repo: https://github.com/Lucas-C/pre-commit-hooks-java
    rev: 1.3.9
    hooks:
      - id: validate-html

  - repo: https://github.com/Lucas-C/pre-commit-hooks-lxml
    rev: v1.1.0
    hooks:
      - id: forbid-html-img-without-alt-text
      - id: forbid-non-std-html-attributes
      - id: detect-missing-css-classes
        args:
          - --css-files-dir
          - docs
          - --html-files-dir
          - docs
      - id: html-tags-blacklist
      - id: html-attributes-blacklist

  - repo: https://github.com/Lucas-C/pre-commit-hooks-markup
    rev: v1.0.0
    hooks:
      - id: rst-linter

  - repo: https://github.com/Lucas-C/pre-commit-hooks-nodejs
    rev: v1.1.1
    hooks:
      - id: dockerfile_lint
        # Optional custom config
        args: [--json, --verbose, --dockerfile]

  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.1.0
    hooks:
      - id: python-safety-dependencies-check

  - repo: https://github.com/jstewmon/check-swagger
    rev: v0.1.4
    hooks:
      - id: check-swagger

  - repo: https://github.com/thlorenz/doctoc
    rev: v1.4.0 # substitute a tagged version
    hooks:
      - id: doctoc

  - repo: https://github.com/noahsark769/xcodeproj-sort-pre-commit-hook
    rev: v1.1.0
    hooks:
      - id: xcodeproj-sort
        args: [--groups-position=above]

  - repo: https://github.com/pryorda/dockerfilelint-precommit-hooks
    rev: v0.1.0
    hooks:
      - id: dockerfilelint
        stages: [commit]

  - repo: https://github.com/alessandrojcm/commitlint-pre-commit-hook
    rev: v2.2.2
    hooks:
      - id: commitlint
        stages: [commit-msg]

  - repo: https://github.com/jorisroovers/gitlint
    rev: v0.13.1
    hooks:
      - id: gitlint
        stages: [commit-msg]

  - repo: https://github.com/IamTheFij/docker-pre-commit
    rev: v2.0.0
    hooks:
      - id: docker-compose-check

  - repo: https://github.com/milin/giticket
    rev: 6f166c66f2423e8e27898b39385d1166f9b643a3
    hooks:
      - id: giticket
        args: ["--regex=PROJ-[0-9]", "--format={ticket} {commit_msg}"] # Optional

  - repo: https://github.com/homebysix/pre-commit-macadmin
    rev: v1.6.2
    hooks:
      - id: check-autopkg-recipe-list
      - id: check-autopkg-recipes
      - id: check-jamf-extension-attributes
      - id: check-jamf-scripts
      - id: check-jamf-profiles
      - id: check-munki-pkgsinfo
      - id: check-munkiadmin-scripts
      - id: check-munkipkg-buildinfo
      - id: check-outset-scripts
      - id: check-plists
      - id: forbid-autopkg-overrides
      - id: forbid-autopkg-trust-info

  - repo: https://github.com/pocc/pre-commit-hooks
    rev: v1.1.1
    hooks:
      - id: clang-format
        args: [-i, --style=LLVM]
      - id: clang-tidy
        args: [-checks=*, -warnings-as-errors=*]
      - id: oclint
        args: [-enable-clang-static-analyzer, -enable-global-analysis]
      - id: cppcheck
        args: [--force]

  - repo: https://github.com/iconmaster5326/cmake-format-pre-commit-hook
    rev: v0.6.9
    hooks:
      - id: cmake-format
